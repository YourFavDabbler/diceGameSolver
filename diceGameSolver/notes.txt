
Ideas:

	Arrays
	{
		Use indexes to repeat operations with different integers?
		Requires use of arrays
		#include <array>
		Use permutaions in CPP to rearrange the array to get all possible outcomes
		Now, I just need to find a way to do the same as the Python Reference and 
		include the operators inbetween.

		More info found on Permutations in the 8/13/21 Changelog
		Links also in Sources
		
	}

Changelog:

8/13/21
{
    I have added the header file to include the declarations of the 
    int value and corrected spelling errors

    I also found the following:

    https://gist.github.com/perrygeo/7161632 
           ^^^ "Python reference" ^^^ 
	The reference above only proves that it is 
	possible to insert operations inbetween random 
	integers 1-6 and get a functional expression. 
	Although, it doesn't give a way to compare all 
	the possible outcomes to determine the best if 
	none of the outcomes is exactly the number. I 
	need to find a way to code in a backdoor that 
	will calculate the closest number if an exact 
	number cannot be reached. Along with, coding in 
	exponentiation and roots.
    
	I need to see if its possible to put the operators in an array 
	and them permutate those along with the values of the d6's 
	to get the product of the d12's.
	I would have to add the backdoor to the closest value after the calculations
	of the permutations and do (Product - (value of expression)) and whichever one
	has the lowest value is the expression that I have to print to the user.
	
				cpp.sh/6oce7

		// next_permutation example
		#include <iostream>     // std::cout
		#include <algorithm>    // std::next_permutation, std::sort

		int main () {
		int myints[] = {1,2,3,4,5,6};

		std::sort (myints,myints+6);

		do {
			std::cout << myints[0] << ' ' << myints[1] << ' ' << myints[2] << ' ' << myints[3] << ' ' << myints[4] << ' ' << myints[5] << '\n';
		} while ( std::next_permutation(myints,myints+6) );

  		return 0;


	Holy shit, my brain hurts.
	I think I've done enough for one day. My brain can't process anything right now.
}

Sources:

{
	Trying to Simulate Python Combinations in C++ with Next Permutation
	https://stackoverflow.com/questions/13423383/trying-to-simulate-python-combinations-in-c-with-next-permutation

	Next Permutation in C++
	https://www.cplusplus.com/reference/algorithm/next_permutation/

	Python Itertools Descprition to help with Porting to C++
	https://docs.python.org/3/library/itertools.html
}
