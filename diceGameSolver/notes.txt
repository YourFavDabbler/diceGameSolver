
Ideas:

	Arrays
	{
		Use indexes to repeat operations with different integers?
		Requires use of arrays
		#include <array>
		Use permutaions in CPP to rearrange the array to get all possible outcomes
		Now, I just need to find a way to do the same as the Python Reference and 
		include the operators inbetween.

		More info found on Permutations in the 8/13/21 Changelog
		Links also in Sources
		
	}

Changelog:

8/13/21
{
    I have added the header file to include the declarations of the 
    int value and corrected spelling errors

    I also found the following:

		https://gist.github.com/perrygeo/7161632 
			^^^ "Python reference" ^^^ 
		The reference above only proves that it is 
		possible to insert operations inbetween random 
		integers 1-6 and get a functional expression. 
		Although, it doesn't give a way to compare all 
		the possible outcomes to determine the best if 
		none of the outcomes is exactly the number. I 
		need to find a way to code in a backdoor that 
		will calculate the closest number if an exact 
		number cannot be reached. Along with, coding in 
		exponentiation and roots.
    
	I need to see if its possible to put the operators in an array 
	and them permutate those along with the values of the d6's 
	to get the product of the d12's.
	I would have to add the backdoor to the closest value after the calculations
	of the permutations and do (Product - (value of expression)) and whichever one
	has the lowest value is the expression that I have to print to the user.
	
				cpp.sh/6oce7

		// next_permutation example
		#include <iostream>     // std::cout
		#include <algorithm>    // std::next_permutation, std::sort

		int main () {
		int myints[] = {1,2,3,4,5,6};

		std::sort (myints,myints+6);

		do {
			std::cout << myints[0] << ' ' << myints[1] << ' ' << myints[2] << ' ' << myints[3] << ' ' << myints[4] << ' ' << myints[5] << '\n';
		} while ( std::next_permutation(myints,myints+6) );

  		return 0;


	Holy shit, my brain hurts.
	I think I've done enough for one day. My brain can't process anything right now.
}

8/14/21
{
	Getting started on permutation studies and indexes. They are gonna be required
	to get my program up and running. I can't seem to remember my ideas with the indexes though.
	Something about the outputs of the permutation functions having to be void functions because
	I already have my main function, but thats a given. I don't know. I'll remember eventually.

	I'm gonna write out the diceGameReference.py files and break it down in my notebook to
	fully understand what it is doing so that I can port it over to C++.

	I'm also attempting to implement Void Functions to help me learn how they work and so on. 
	Let's see how this goes. It is included in diceGameSolver_V2.cpp

	I need to create an array of all the d6's and permutate them to get 3! to print out. This is
	just to see if I can get it to function properly. I may have to do some testing on cpp.sh to 
	fully learn the extent of arrays and permutations.

	Trying to learn Void Functions. I am having a hard time understanding how to get Main and 
	Arithmetic to communicate properly in an optimized way. I am gonna be stuck on this for a bit.
}

Sources:

{
	GitHub Repository of Python Reference
	https://gist.github.com/perrygeo/7161632
	
	Trying to Simulate Python Combinations in C++ with Next Permutation
	https://stackoverflow.com/questions/13423383/trying-to-simulate-python-combinations-in-c-with-next-permutation

	Next Permutation in C++
	https://www.cplusplus.com/reference/algorithm/next_permutation/

	Testing Permutations in C++
	cpp.sh/6oce7
	
	Python Itertools Descprition to help with Porting to C++
	https://docs.python.org/3/library/itertools.html
}
